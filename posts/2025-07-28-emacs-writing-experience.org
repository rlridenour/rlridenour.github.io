#+TITLE: Emacs Writing Experience
#+date: <2025-07-28 Mon 13:44>
#+filetags:  emacs
#+setupfile: ../org-templates/post.org

I've enjoyed reading the posts in this month's [[https://gregnewman.io/blog/emacs-carnival-2025-07-writing-experience/][Emacs Carnival]] on the topic of "Writing Experience." It's given me an opportunity to reflect not only on how I use Emacs to write, but also on why I continue to use Emacs despite the many alternatives that are available. I don't consider myself to be the typical Emacs user, if there is such a person. I'm certainly not a coder; anything I learned in my single FORTRAN class thirty-five years ago is long gone by now.[fn:1] I am a philosophy professor at a small liberal arts university, which means that I live in a Microsoft world. It's very likely that I am the only Emacs user on campus. I'm also a retired Army Reserve chaplain. I'm sure that Emacs users are a minority in technical fields, but they are almost non-existent in the humanities. One can only imagine how few Emacs users there are in ministry.

Everything that I produced during my undergraduate and graduate studies, including my dissertation,  was written with a word processor, either WordPerfect 5.1 or MS Word 6.0. As I began working more with formal logic, I began to be more aware of the power and beautiful output of LaTeX, and that led me to look for the best way to edit LaTeX files. In 2012, I wrote a blog post about my journey in search of the perfect writing tool, titled "[[https://randyridenour.net/posts/2012-05-24-a-sordid-tale-of-text-editors.html][A Sordid Tale of Text Editors]]." What I now find particularly interesting about that post are the three reasons why I rejected Emacs at the time:

1. The complex, arcane key combinations,
2. The inability to use Textexpander snippets in Gnu Emacs, and
3. The pain of configuring Emacs for amateurs.

The second no longer applies â€” at the time, Emacs just wasn't a well-behaved Mac app, but that has changed over the years. The first and third, though, are still common reasons that people cite for giving up Emacs. Shortly after I wrote that, however, I gave Emacs another try, and over a decade later, I'm still using it. More that that, though, I can't imagine an alternative.

The mistake that I made in my earlier flirtation with Emacs was, in my opinion, treating it as just another text editor. Every other text editor that I tried demanded that I conform it its way of editing. When I realized that Emacs, with a bit of configuration work, was quite willing to conform to the way that I wanted to work, the search was over. Don't like the keybindings, change them! The initialization files may look complicated at first, but Lisp is very straightforward and remarkably easy to follow, even for a philosopher. When I got stuck, I found the community to be remarkably gracious and helpful.

I do write some papers for presentation and possible publication, but our primary responsibility as faculty at my institution is teaching. So, most of my writing is for lecture notes, presentation slides, and handouts. Given our heavy teaching load (normally four courses per semester), it helps to be able to produce these as efficiently as possible. With Emacs, I'm able to write one document and, from that, produce a PDF of notes for me, slides to show in class, and and HTML handout to post in the learning management system. In short, a function creates four files: one that exports a notes PDF for me, one that exports to a LaTeX Beamer document, one that exports to HTML for posting, and a data file used by the other three. The Org headers are automatically inserted into each file, and two Yasnippet snippets make it easy to specify text that appears only in the presenter's notes in the presentation and more detailed notes that appear in the lecture notes. The HTML handout includes everything in the lecture notes. (The code is in the [[https://github.com/rlridenour/emacs-elpaca-config?tab=readme-ov-file#teaching][teaching]] section of my configuration file.)

I use many packages, but there are some that are particularly useful for my everyday writing. 

- [[https://github.com/minad/jinx][Jinx]] for spell checking.
- I've already mentioned [[https://github.com/joaotavora/yasnippet][Yasnippet]]. I also find [[https://github.com/Kungsgeten/yankpad][Yankpad]] can be useful for inserting snippets that are used only occasionally.
- [[https://github.com/aaronjensen/emacs-orgonomic][Orgonomic]] helps me quickly enter lists and headings in Org mode.
- [[https://github.com/oantolin/math-delimiters][Math-Delimiters]] for quickly entering LaTeX math mode.
- [[https://github.com/emacs-citar/citar][Citar]] makes citations simple.

Finally, I should point out that I can't use Emacs for everything. Although everything begins in Org mode, some of it must, unfortunately, end up in Microsoft Word. I have a collaborative book project with a colleague who only uses Word, and most publishers in the humanities, including my particular fields of philosophy and religion, expect Word documents. I still continue to find ways to keep as much as possible within Emacs.

In the end, the best thing about the Emacs writing experience is that there is no such thing as /the/ Emacs writing experience. Emacs provides a canvas and tools from which each user crafts their own editor. Simple or complex, modal or non-modal, Emacs can provide the writing experience you want, not merely something that just approximates it.

#+begin_tagline
Tagged:  [[file:../tags/emacs.org][Emacs]]
#+end_tagline

* Footnotes

[fn:1] The only thing that remains is a vague recollection of the pain of counting columns when debugging a program. 
